{"version":3,"sources":["Row.jsx"],"names":["dateStyle","color","fontSize","cellType","item","key","length","fullName","Row","props","excludeKeys","index","map","handleDelete","propTypes","PropTypes","object","isRequired","array","number","func"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;AAEA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,SADS;AAEhBC,EAAAA,QAAQ,EAAE;AAFM,CAAlB;;AAKA,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,GAAxB,EAA6B;AAC3B,UAAQA,GAAR;AACE,SAAK,aAAL;AACE,aAAO,6BAAC,aAAD;AAAM,QAAA,IAAI,EAAED,IAAI,CAACC,GAAD,CAAhB;AAAuB,QAAA,KAAK,EAAEL,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACF,SAAK,UAAL;AACE,aACE,6BAAC,cAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGI,IAAI,CAACC,GAAD,CAAJ,CAAUC,MADb,OACqB,6BAAC,iCAAD;AAAiB,QAAA,IAAI,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADrB,CADF;;AAKF,SAAK,QAAL;AACE,aAAOF,IAAI,CAACC,GAAD,CAAJ,CAAUE,QAAjB;;AACF;AACE,aAAOH,IAAI,CAACC,GAAD,CAAX;AAZJ;AAcD;;AAED,MAAMG,GAAG,GAAGC,KAAK,IAAI;AAAA,QACXL,IADW,GACkBK,KADlB,CACXL,IADW;AAAA,QACLM,WADK,GACkBD,KADlB,CACLC,WADK;AAAA,QACQC,KADR,GACkBF,KADlB,CACQE,KADR;AAEnB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBA,KAAK,GAAG,CAAzB,CADF,EAEGD,WAAW,CAACE,GAAZ,CAAgBP,GAAG,IAClB;AAAI,IAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeF,QAAQ,CAACC,IAAD,EAAOC,GAAP,CAAvB,CADD,CAFH,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,eAAD;AAAQ,IAAA,WAAW,EAAC,aAApB;AAAkC,IAAA,UAAU,EAAC,MAA7C;AAAoD,IAAA,SAAS,EAAC,GAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGY,GAHZ,EAIE,6BAAC,eAAD;AACE,IAAA,WAAW,EAAC,YADd;AAEE,IAAA,UAAU,EAAC,QAFb;AAGE,IAAA,YAAY,EAAE,MAAMI,KAAK,CAACI,YAAN,CAAmBT,IAAnB,CAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CALF,CADF;AAoBD,CAtBD;;AAwBAI,GAAG,CAACM,SAAJ,GAAgB;AACdV,EAAAA,IAAI,EAAEW,mBAAUC,MAAV,CAAiBC,UADT;AAEdP,EAAAA,WAAW,EAAEK,mBAAUG,KAAV,CAAgBD,UAFf;AAGdN,EAAAA,KAAK,EAAEI,mBAAUI,MAAV,CAAiBF,UAHV;AAIdJ,EAAAA,YAAY,EAAEE,mBAAUK,IAAV,CAAeH;AAJf,CAAhB;eAOeT,G","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport Button from \"../common/Button\";\nimport Date from \"../common/Date\";\n\nconst dateStyle = {\n  color: \"#212529\",\n  fontSize: \"1rem\"\n};\n\nfunction cellType(item, key) {\n  switch (key) {\n    case \"publishDate\":\n      return <Date date={item[key]} style={dateStyle} />;\n    case \"comments\":\n      return (\n        <React.Fragment>\n          {item[key].length} <FontAwesomeIcon icon=\"comments\" />\n        </React.Fragment>\n      );\n    case \"author\":\n      return item[key].fullName;\n    default:\n      return item[key];\n  }\n}\n\nconst Row = props => {\n  const { item, excludeKeys, index } = props;\n  return (\n    <tr>\n      <th scope=\"row\">{index + 1}</th>\n      {excludeKeys.map(key => (\n        <td key={key}>{cellType(item, key)}</td>\n      ))}\n      <td>\n        <Button buttonClass=\"btn-warning\" buttonType=\"link\" buttonUrl=\"/\">\n          Edit\n        </Button>{\" \"}\n        <Button\n          buttonClass=\"btn-danger\"\n          buttonType=\"button\"\n          handleAction={() => props.handleDelete(item)}\n        >\n          Delete\n        </Button>\n      </td>\n    </tr>\n  );\n};\n\nRow.propTypes = {\n  item: PropTypes.object.isRequired,\n  excludeKeys: PropTypes.array.isRequired,\n  index: PropTypes.number.isRequired,\n  handleDelete: PropTypes.func.isRequired\n};\n\nexport default Row;\n"]}