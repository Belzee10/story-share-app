{"version":3,"sources":["List.jsx"],"names":["excludeKeys","keys","result","i","length","push","listBody","items","props","map","item","index","_id","handleDelete","List","propTypes","PropTypes","array","isRequired","func"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;AAEA;AACA,SAASA,WAAT,CAAqBC,IAArB,EAA2B;AACzB,QAAMC,MAAM,GAAG,EAAf;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,QACEF,IAAI,CAACE,CAAD,CAAJ,KAAY,KAAZ,IACAF,IAAI,CAACE,CAAD,CAAJ,KAAY,KADZ,IAEAF,IAAI,CAACE,CAAD,CAAJ,KAAY,YAFZ,IAGAF,IAAI,CAACE,CAAD,CAAJ,KAAY,UAHZ,IAIAF,IAAI,CAACE,CAAD,CAAJ,KAAY,SAJZ,IAKAF,IAAI,CAACE,CAAD,CAAJ,KAAY,YALZ,IAMAF,IAAI,CAACE,CAAD,CAAJ,KAAY,eAPd,EAQE;AACAD,MAAAA,MAAM,CAACG,IAAP,CAAYJ,IAAI,CAACE,CAAD,CAAhB;AACD;AACF;;AACD,SAAOD,MAAP;AACD;;AAED,SAASI,QAAT,CAAkBC,KAAlB,EAAyBN,IAAzB,EAA+BO,KAA/B,EAAsC;AACpC,MAAI,CAACD,KAAK,CAACH,MAAX,EAAmB;AACjB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,OAAO,EAAEJ,WAAW,CAACC,IAAD,CAAX,CAAkBG,MAAlB,GAA2B,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF;AAKD;;AACD,SAAOG,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KACf,6BAAC,YAAD;AACE,IAAA,IAAI,EAAED,IADR;AAEE,IAAA,WAAW,EAAEV,WAAW,CAACC,IAAD,CAF1B;AAGE,IAAA,KAAK,EAAEU,KAHT;AAIE,IAAA,GAAG,EAAED,IAAI,CAACE,GAJZ;AAKE,IAAA,YAAY,EAAEJ,KAAK,CAACK,YALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,CAAP;AASD;;AAED,MAAMC,IAAI,GAAGN,KAAK,IAAI;AAAA,QACZD,KADY,GACIC,KADJ,CACZD,KADY;AAAA,QACLN,IADK,GACIO,KADJ,CACLP,IADK;AAEpB,SACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,cAAD;AAAO,IAAA,WAAW,EAAED,WAAW,CAACC,IAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQK,QAAQ,CAACC,KAAD,EAAQN,IAAR,EAAcO,KAAd,CAAhB,CAJF,CADF,CADF;AAUD,CAZD;;AAcAM,IAAI,CAACC,SAAL,GAAiB;AACfR,EAAAA,KAAK,EAAES,mBAAUC,KAAV,CAAgBC,UADR;AAEfjB,EAAAA,IAAI,EAAEe,mBAAUC,KAAV,CAAgBC,UAFP;AAGfL,EAAAA,YAAY,EAAEG,mBAAUG,IAAV,CAAeD;AAHd,CAAjB;eAMeJ,I","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Row from \"./Row\";\nimport Thead from \"./Thead\";\n\n// exclude \"_id\", \"__v\", \"created_at\", \"password\", \"content\", \"categories\", \"notifications\"\nfunction excludeKeys(keys) {\n  const result = [];\n  for (let i = 0; i < keys.length; i++) {\n    if (\n      keys[i] !== \"_id\" &&\n      keys[i] !== \"__v\" &&\n      keys[i] !== \"created_at\" &&\n      keys[i] !== \"password\" &&\n      keys[i] !== \"content\" &&\n      keys[i] !== \"categories\" &&\n      keys[i] !== \"notifications\"\n    ) {\n      result.push(keys[i]);\n    }\n  }\n  return result;\n}\n\nfunction listBody(items, keys, props) {\n  if (!items.length) {\n    return (\n      <tr>\n        <td colSpan={excludeKeys(keys).length + 2}>No items found :(</td>\n      </tr>\n    );\n  }\n  return items.map((item, index) => (\n    <Row\n      item={item}\n      excludeKeys={excludeKeys(keys)}\n      index={index}\n      key={item._id}\n      handleDelete={props.handleDelete}\n    />\n  ));\n}\n\nconst List = props => {\n  const { items, keys } = props;\n  return (\n    <div className=\"text-center\">\n      <table className=\"table\">\n        <thead>\n          <Thead excludeKeys={excludeKeys(keys)} />\n        </thead>\n        <tbody>{listBody(items, keys, props)}</tbody>\n      </table>\n    </div>\n  );\n};\n\nList.propTypes = {\n  items: PropTypes.array.isRequired,\n  keys: PropTypes.array.isRequired,\n  handleDelete: PropTypes.func.isRequired\n};\n\nexport default List;\n"]}