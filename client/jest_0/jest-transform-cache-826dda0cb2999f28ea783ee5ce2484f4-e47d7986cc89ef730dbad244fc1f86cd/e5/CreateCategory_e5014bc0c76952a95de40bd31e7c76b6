ae1306276ebb87b5bb89d723ecefb6d5
"use strict";

var _interopRequireWildcard = require("/home/belzee/projects/story-share-project/story-share-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/belzee/projects/story-share-project/story-share-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactRedux = require("react-redux");

var _categoryActions = require("../../../actions/categoryActions");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _FormValidator = _interopRequireDefault(require("../../../utiles/FormValidator"));

var _Button = _interopRequireDefault(require("../../../components/common/Button"));

var _InvalidFeedback = _interopRequireDefault(require("../../../components/common/InvalidFeedback"));

var _Alert = _interopRequireDefault(require("../../../components/common//Alert"));

var _jsxFileName = "/home/belzee/projects/story-share-project/story-share-app/client/src/containers/back/categories/CreateCategory.jsx";

class CreateCategory extends _react.Component {
  constructor(props) {
    super(props);
    this.validator = new _FormValidator.default([{
      field: "name",
      method: "isEmpty",
      validWhen: false,
      message: "Name is required."
    }]);
    this.state = {
      name: "",
      validation: this.validator.valid(),
      showAlert: false
    };
    this.submitted = false;
    this.timer = null;
    this.onChange = this.onChange.bind(this);
    this.onSubmit = this.onSubmit.bind(this);
    this.afterSubmit = this.afterSubmit.bind(this);
    this.handleTimeOut = this.handleTimeOut.bind(this);
  }

  componentWillUnmount() {
    if (this.timer) {
      clearTimeout(this.timer);
      this.timer = null;
    }
  }

  onChange(e) {
    this.setState({
      [e.target.name]: e.target.value
    });
  }

  onSubmit(e) {
    e.preventDefault();
    const validation = this.validator.validate(this.state);
    this.setState({
      validation
    });
    this.submitted = true;

    if (validation.isValid) {
      const category = {
        name: this.state.name
      };
      this.props.createCategory(category);
      this.afterSubmit();
      this.submitted = false;
    }
  }

  handleTimeOut() {
    if (this.timer) {
      clearTimeout(this.timer);
      this.timer = null;
    }

    this.timer = setTimeout(() => {
      this.setState({
        showAlert: false
      });
    }, 2000);
  }

  afterSubmit() {
    this.setState(prevState => {
      return {
        showAlert: prevState.showAlert = true,
        name: ""
      };
    }, () => {
      this.handleTimeOut();
    });
  }

  render() {
    const _this$state = this.state,
          name = _this$state.name,
          showAlert = _this$state.showAlert;
    let validation = this.submitted ? this.validator.validate(this.state) : this.state.validation;
    return _react.default.createElement("div", {
      className: "container",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 92
      },
      __self: this
    }, _react.default.createElement("div", {
      className: "row",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 93
      },
      __self: this
    }, _react.default.createElement("div", {
      className: "col-lg-6",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 94
      },
      __self: this
    }, _react.default.createElement("div", {
      className: "card",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 95
      },
      __self: this
    }, _react.default.createElement("div", {
      className: "card-body",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 96
      },
      __self: this
    }, _react.default.createElement("form", {
      onSubmit: this.onSubmit,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 97
      },
      __self: this
    }, _react.default.createElement("h2", {
      className: "mb-3",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 98
      },
      __self: this
    }, "Create Category"), _react.default.createElement("div", {
      className: "form-group",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 99
      },
      __self: this
    }, _react.default.createElement("label", {
      htmlFor: "name",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 100
      },
      __self: this
    }, "Name:"), _react.default.createElement("input", {
      value: name,
      onChange: this.onChange,
      type: "text",
      id: "name",
      name: "name",
      className: `form-control ${validation.name.isInvalid && "is-invalid"}`,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 101
      },
      __self: this
    }), _react.default.createElement(_InvalidFeedback.default, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 110
      },
      __self: this
    }, validation.name.message)), _react.default.createElement("div", {
      className: "form-group",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 112
      },
      __self: this
    }, _react.default.createElement(_Button.default, {
      disabled: !validation.isValid && true,
      buttonClass: "btn-primary",
      buttonType: "submit",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 113
      },
      __self: this
    }, "Create"), " ", _react.default.createElement(_Button.default, {
      buttonUrl: "/admin/categories",
      buttonClass: "btn-secondary",
      buttonType: "link",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 120
      },
      __self: this
    }, "Go back")))))), _react.default.createElement("div", {
      className: "col-lg-6",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 132
      },
      __self: this
    }, showAlert && _react.default.createElement(_Alert.default, {
      alertType: "success",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 134
      },
      __self: this
    }, "Category created successfuly!"))));
  }

}

CreateCategory.propTypes = {
  createCategory: _propTypes.default.func.isRequired
};

const mapStateToProps = state => ({
  message: state.categories.message
});

var _default = (0, _reactRedux.connect)(mapStateToProps, {
  createCategory: _categoryActions.createCategory
})(CreateCategory);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,